class NoPoseeCategoriaColorSecundarioException(var msg: String) : RuntimeException(msg)

class Prenda {
	TipoPrenda tipo
	Categoria categoria
	Formalidad
	tipo(){
		if(tipo != NULL){
			this.tipo
		} else {
			throw BusinessException("La prenda no posee tipo, la prenda debe poseer un tipo que tenga que ver con su categoria")
		}
	}
	string colorPrincilpal
	colorPrincipal(){
		if(tipo != NULL){
			this.coloPrincipal
		} else {
			throw BusinessException("La prenda no posee un color princial")
		}
	}
	string colorSecundario
	
	categoria(){
		if(tipo != NULL){
			this.categoria
		} else {
			throw BusinessException("La prenda no posee categoria, la prenda debe poseer un categoria que tenga que ver con su tipo")
		}
	}
	string material
	material(){
		if(tipo != NULL){
			this.material
		} else {
			throw BusinessException("La prenda no posee material o tipo de tela")
		}
	}
	public esSuperior(){
        this.categoria == Categoria.PARTE_SUPERIOR;
    }

}

enum Categoria {
    PARTE_SUPERIOR, PARTE_INFERIOR, CALZADO
}


enum Formalidad {
    FORMAL, INFORMAL, NEUTRA
}

enum TipoPrenda {
    REMERA, PANTALON, CAMPERA, CAMISA, SACO, SHORT, POLLERA,...
}
class Usuario{
	listaPrendas
	ListaTipoDePrendas() = listaPrendas.map(prenda => prenda.tipo())
	mostrarCategoriaPrenda(prenda) = prenda.cantegoria()
	mostrarMaterialPrenda(prenda) = prenda.material()
	mostrarColorSecundarioPrenda(prenda).try{
		prenda.colorSecundario()
	}
	.catch(NoPoseeCategoriaColorSecundarioException){
		system.out.print("No posee color secundario")
	}
	
}

class Borrador {
  especificarTipo(...) {  }
  especificarMaterial(...) {
   
  }

  construir() {
  
  }
}

Borrador borrador = new Borrador();
borrador.especificarTipo(REMERA);
borrador.especificarMaterial(ALGODON);

Prenda prenda = borrador.construir();

class Sugerencia {
    Prenda superior;
    Prenda inferior;
    Prenda calzado;

    public Sugerencia(Prenda superior, Prenda inferior, Prenda calzado){
    ...
    }

}

